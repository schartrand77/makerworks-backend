version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: makerworks_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: makerworks
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    platform: linux/arm64

  redis:
    image: redis:7-alpine
    container_name: makerworks_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    platform: linux/arm64

  redis_exporter:
    image: oliver006/redis_exporter:v1.62.0
    container_name: makerworks_redis_exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    command:
      - '--redis.addr=redis://makerworks_redis:6379'
    depends_on:
      - redis

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: makerworks_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:password@postgres:5432/makerworks
      - REDIS_URL=redis://redis:6379/0
      - BASE_URL=http://localhost:8000
    platform: linux/arm64

  prometheus:
    image: prom/prometheus
    container_name: makerworks_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - backend
      - redis_exporter

  grafana:
    image: grafana/grafana
    container_name: makerworks_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana

  flower:
    image: mher/flower
    container_name: makerworks_flower
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
    command: >
      flower --port=5555 --broker=redis://redis:6379/0

volumes:
  postgres_data:
  redis_data:
  grafana_data:
